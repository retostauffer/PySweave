#!/bin/python
# -------------------------------------------------------------------
# - NAME:        PySweave
# - AUTHOR:      Reto Stauffer
# - DATE:        2017-09-25
# -------------------------------------------------------------------
# - DESCRIPTION:
# -------------------------------------------------------------------
# - EDITORIAL:   2017-09-25, RS: Created file on thinkreto.
# -------------------------------------------------------------------
# - L@ST MODIFIED: 2017-09-26 16:04 on thinkreto
# -------------------------------------------------------------------


import logging
logging.basicConfig(format="# %(levelname)s %(message)s",level=logging.INFO)
log = logging.getLogger()

# -------------------------------------------------------------------
# -------------------------------------------------------------------
if __name__ == "__main__":

   import sys, os, argparse

   # Input arguments for the compilation script
   parser = argparse.ArgumentParser(description='Process some integers.')
   parser.add_argument("--file","-f", dest="file", type=str, default=None,
                       help="The file which should be parsed. Has to be given.")
   parser.add_argument("--nocompile", dest="compile", action="store_false", default=True,
                       help="If set the files will not be compiled (Sweave/pdflatex).")
   parser.add_argument("--noclean", dest="clean", action="store_false", default=True,
                       help="If set the output files (tex, aux, ...) will not be deleted " + \
                            "after compilation of the Rnw/Tex file.")
   args = parser.parse_args()

   # Stop if input file missing
   if not args.file:
      log.error("No input file given on \"-f/--file\". Stop"); sys.exit(9)
   elif not os.path.isfile( args.file ):
      log.error("Sorry, file \"{:s}\" does not exist.".format(self.file))

   from PySweave import *
   obj = texFileHandler(args.file,args.clean)

   # Output for debugging
   if not args.compile: obj.showConfig()

   # Write output files
   obj.write("doc")
   obj.write("slides")

   # Copile or show content
   if not args.compile:
      ##obj.show()
      obj.show("slides")
      obj.show("doc")
   else:
      obj.render()

   # Cleaning. If --noclean is set this function will
   # simply do nothing at all.
   obj.cleanup()











